{
	"name": "import-helper",
	"publisher": "bf-s",
	"displayName": "Import Helper",
	"description": "quickly add imports for modules and symbols to the top of your code (for .ts, .js, .tsx, .jsx, & .svelte)",
	"version": "0.8.0",
	"icon": "out-bundle/images/BF-Software/icon.png",
	"engines": {
		"vscode": "^1.63.0"
	},
	"repository": {
		"url": "https://github.com/bf-software/import-helper/",
		"type": "git"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onStartupFinished",
		"onCommand:import-helper.addImport",
		"onCommand:import-helper.goToImports"
	],
	"main": "./out-bundle/extensionEntryPoint.js",
	"contributes": {
		"configuration": {
			"title": "Import Helper",
			"properties": {
				"import-helper.moduleSpecifier.pathStyle": {
					"type": "string",
					"scope": "window",
					"enum": [
						"use-vscode-settings",
						"non-relative-unless-same"
					],
					"markdownDescription": "leave this blank, or select `use-vscode-settings` to defer to `TypeScript/JavaScript › Preferences: Import Module Specifier`.",
					"markdownEnumDescriptions": [
						"uses vscode's setting in `TypeScript/JavaScript › Preferences: Import Module Specifier`.",
						"prefers non-relative paths, unless the importing module and imported module are in the same non-relative path hierarchy."
					]
				},
				"import-helper.paths.exclude": {
					"type": "string",
					"scope": "window",
					"default": "",
					"markdownDescription": "List paths to be excluded when looking for your project's modules. Start a path with a forward slash to start from the root of your workspace, otherwise exclusions are considered to reside anywhere in the path.\n\n&nbsp;\n\nFor example: `/out, test` will exclude `<workspace root>/out`, but not `<workspace root>/whatever/out`.  It will also exclude any folder named `test` in your entire hierarchy. There is no need to add `node_modules` as it is always excluded."
				},
				"import-helper.extentions.additional": {
					"type": "string",
					"scope": "window",
					"default": "",
					"markdownDescription": "List additional extensions to allow in import statements. For example, React with Webpack allows `css` files to be imported directly into your code. (format: .ext1, .ext2, etc...)"
				}
			}
		},
		"commands": [
			{
				"command": "import-helper.addImport",
				"title": "Import Helper: Add Import"
			},
			{
				"command": "import-helper.goToImports",
				"title": "Import Helper: Go to Imports"
			},
			{
				"command": "import-helper.goBackDown",
				"title": "Import Helper: Go to Imports"
			},
			{
				"command": "import-helper.openModule",
				"title": "Import Helper: Open Module"
			}
		],
		"keybindings": [
			{
				"command": "import-helper.addImport",
				"key": "Alt+F11"
			},
			{
				"command": "import-helper.addImportByModule"
			},
			{
				"command": "import-helper.addImportBySymbol"
			},
			{
				"command": "import-helper.openModule",
				"key": "Alt+O"
			},
			{
				"command": "import-helper.openModuleByModule"
			},
			{
				"command": "import-helper.openModuleBySymbol"
			},
			{
				"command": "import-helper.goToImports",
				"key": "Ctrl+Shift+Up",
				"mac": "Shift+Cmd+Up"
			},
			{
				"command": "import-helper.goBackDown",
				"key": "Ctrl+Shift+Down",
				"mac": "Shift+Cmd+Down"
			},
			{
				"command": "import-helper.showReferences",
				"key": "Alt+R"
			}
		]
	},
	"scripts": {
		"dev-build": "webpack --config ./webpack.config.mjs | less -f -r",
		"dev-watch": "webpack --config ./webpack.config.mjs --watch",
		"prod-build": "cross-env NODE_ENV=production webpack --config ./webpack.config.mjs",
		"prod-map-explorer-html": "source-map-explorer ./out-bundle/extensionEntryPoint.js ./out-bundle/extensionEntryPoint.js.map",
		"prod-map-explorer-list": "source-map-explorer ./out-bundle/extensionEntryPoint.js ./out-bundle/extensionEntryPoint.js.map --tsv",
		"prod-vsce-deploy": "mkdirp ./deploy && vsce package --no-dependencies --out ./deploy"
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/node": "^16.11.7",
		"@types/semver": "^7.3.9",
		"@types/strip-comments": "^2.0.1",
		"@types/vscode": "^1.63.0",
		"clean-terminal-webpack-plugin": "^3.0.0",
		"clean-webpack-plugin": "^4.0.0",
		"copy-webpack-plugin": "^10.1.0",
		"cross-env": "^7.0.3",
		"glob": "^7.2.0",
		"mkdirp": "^1.0.4",
		"source-map-explorer": "^2.5.2",
		"ts-loader": "^9.2.6",
		"vsce": "^2.3.0",
		"vscode-codicons": "^0.0.17",
		"vscode-test": "^1.6.1",
		"webpack": "^5.64.0",
		"webpack-cli": "^4.9.1"
	},
	"dependencies-comments": {
		"chalk": "can't use v5.0.0 yet because it uses `import from 'node:process';` which vscode 1.63.0 can't handle because of the `node:`."
	},
	"dependencies": {
		"chalk": "^4.1.2",
		"semver": "^7.3.5",
		"source-map-js": "^1.0.1",
		"strip-comments": "^2.0.1",
		"typescript": "^4.4.3"
	}
}
